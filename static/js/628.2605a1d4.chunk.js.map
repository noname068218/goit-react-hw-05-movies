{"version":3,"file":"static/js/628.2605a1d4.chunk.js","mappings":"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","sources":["components/Api/api.js","components/PageStyle/Search.style.js","components/pages/MoviesPage.js","MovieSearchLogic/MovieSearch.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '517b052a4f931bad1801acfa9e9ff07e';\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\nexport const fetchTrendingMovies = async () => {\n  return await axios\n    .get(`/3/trending/movie/day?api_key=${API_KEY}`)\n    .then(response => response.data.results)\n    .catch(err => console.log(err));\n};\n\nexport const fetchMovieDetailsById = async movieId => {\n  return await axios\n    .get(`/3/movie/${movieId}?api_key=${API_KEY}`)\n    .then(r => r.data);\n};\n\nexport const fetchActors = async movieId => {\n  return await axios\n    .get(`/3/movie/${movieId}/credits?api_key=${API_KEY}`)\n    .then(r => r.data.cast);\n};\n\nexport const fetchReviews = async movieId => {\n  return await axios\n    .get(`/3/movie/${movieId}/reviews?api_key=${API_KEY}`)\n    .then(r => r.data.results);\n};\n\nexport const fetchMoviesByQuery = async query => {\n  return await axios\n    .get(`/3/search/movie?query=${query}&api_key=${API_KEY}`)\n    .then(r => r.data.results);\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MainBackground = styled.div`\n  width: 100%;\n  height: 100vh;\n`;\n\nexport const VideoFrame = styled.video`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  position: fixed;\n`;\nexport const OverlayVideo = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.7);\n`;\n\nexport const Conein = styled.section`\n  background-color: aliceblue;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const SearchInput = styled.input`\n  padding: 10px;\n  width: 120px;\n  border: none;\n  outline: none;\n  border-radius: 5px;\n  box-shadow: 0 1px gray;\n  font-size: 18px;\n  transition: width 0.3s;\n  font-family: Consolas, monaco, monospace;\n  &:focus {\n    outline: 1px solid blue;\n    box-shadow: none;\n    width: 230px;\n  }\n\n  ::placeholder {\n    color: blue;\n  }\n`;\n\nexport const BntSearch = styled.button`\n  position: relative;\n  top: 0;\n  left: 0;\n  margin-top: 30px;\n  color: #090909;\n  padding: 0.7em 1.7em;\n  font-size: 18px;\n  border-radius: 0.5em;\n  background: #e8e8e8;\n  border: 1px solid #e8e8e8;\n  transition: all 0.3s;\n  box-shadow: 6px 6px 12px #c5c5c5, -6px -6px 12px #ffffff;\n\n  &:active {\n    color: #666;\n    box-shadow: inset 4px 4px 12px #c5c5c5, inset -4px -4px 12px #ffffff;\n  }\n`;\nexport const WraperContainer = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const Search = styled.div`\n  position: relative;\n  top: 0;\n  left: 0;\n`;\n\nexport const LinkPoster = styled(Link)`\n  width: 100%;\n  box-shadow: 0 5px 20px 3px rgba(0, 0, 0, 0.6);\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  list-style-type: none;\n  padding: 0;\n`;\n\nexport const Listli = styled.li`\n  list-style-type: none;\n`;\n\nexport const Card = styled.div`\n  position: relative;\n  width: 300px;\n  height: 400px;\n  margin: 20px;\n  border-radius: 10px;\n  overflow: hidden;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease-in-out;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\nexport const Container = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  border-radius: 10px;\n  overflow: hidden;\n`;\n\nexport const CardBack = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  border-radius: 10px;\n  overflow: hidden;\n`;\n\nexport const CardFront = styled.p`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-size: 20px;\n  font-weight: bold;\n  color: #fff;\n  text-align: center;\n  z-index: 2;\n  opacity: 0;\n  transition: opacity 0.3s ease-in-out;\n\n  ${Card}:hover & {\n    opacity: 1;\n  }\n`;\n\nexport const Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  border-radius: 10px;\n  z-index: 1;\n  opacity: 0;\n  transition: opacity 0.3s ease-in-out;\n\n  ${Card}:hover & {\n    opacity: 1;\n  }\n`;\n\nexport const ImageCard = styled.img`\n  object-fit: cover;\n  width: 100%;\n  height: 100%;\n`;\n","import React from 'react';\nimport { useMoviePageLogic } from 'MovieSearchLogic/MovieSearch';\nimport {\n  WraperContainer,\n  SearchInput,\n  Search,\n  BntSearch,\n  ImageCard,\n  List,\n  Listli,\n  LinkPoster,\n  Card,\n  Container,\n  CardBack,\n  CardFront,\n  Overlay,\n  Conein,\n  MainBackground,\n  VideoFrame,\n  OverlayVideo,\n} from 'components/PageStyle/Search.style';\nimport NoImage from '../No-picture.png';\n\nconst MoviePage = () => {\n  const { query, movies, handleInputChange, handleSearch } =\n    useMoviePageLogic();\n\n  return (\n    <MainBackground>\n      <WraperContainer>\n        <VideoFrame autoPlay loop muted>\n          <source\n            type=\"video/mp4\"\n            src=\"https://static.pexels.com/lib/videos/free-videos.mp4\"\n          />\n        </VideoFrame>\n        <OverlayVideo />\n        <Conein>\n          <Search>\n            <SearchInput\n              type=\"text\"\n              value={query}\n              onChange={handleInputChange}\n              placeholder=\"Enter movie title...\"\n            />\n          </Search>\n          <BntSearch onClick={handleSearch}>Search</BntSearch>\n\n          <List>\n            {movies.map(movie => (\n              <Listli key={movie.id}>\n                <Card>\n                  <Container>\n                    <CardBack>\n                      <LinkPoster\n                        to={`/movies/${movie.id}`}\n                        state={{ from: '/movies?query=' + query }}\n                      >\n                        {movie.backdrop_path ? (\n                          <ImageCard\n                            src={`https://image.tmdb.org/t/p/original${movie.backdrop_path}`}\n                            alt={movie.title}\n                          />\n                        ) : (\n                          <ImageCard src={NoImage} alt=\"not available\" />\n                        )}\n                        <Overlay />\n                        <CardFront>{movie.title}</CardFront>\n                      </LinkPoster>\n                    </CardBack>\n                  </Container>\n                </Card>\n              </Listli>\n            ))}\n          </List>\n        </Conein>\n      </WraperContainer>\n    </MainBackground>\n  );\n};\n\nexport default MoviePage;\n","import { useState, useEffect, useCallback, useRef } from 'react';\nimport { fetchMoviesByQuery } from 'components/Api/api';\nimport { useSearchParams } from 'react-router-dom';\n\nexport const useMoviePageLogic = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n  const [movies, setMovies] = useState([]);\n\n  const handleSearch = useCallback(async () => {\n    try {\n      const fetchedMovies = await fetchMoviesByQuery(query);\n      setMovies(fetchedMovies);\n    } catch (error) {\n      console.error('Error fetching movies:', error);\n    }\n  }, [query]);\n  const handleSearchRef = useRef(handleSearch);\n  useEffect(() => {\n    handleSearchRef.current();\n  }, []);\n\n  const handleInputChange = e => {\n    setSearchParams({ query: e.target.value });\n  };\n\n  return {\n    query,\n    movies,\n    handleInputChange,\n    handleSearch,\n  };\n};\n"],"names":["API_KEY","axios","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","concat","then","response","data","results","catch","err","console","log","abrupt","sent","stop","apply","arguments","fetchMovieDetailsById","_ref2","_callee2","movieId","_context2","r","_x","fetchActors","_ref3","_callee3","_context3","cast","_x2","fetchReviews","_ref4","_callee4","_context4","_x3","fetchMoviesByQuery","_ref5","_callee5","query","_context5","_x4","MainBackground","styled","_templateObject","_taggedTemplateLiteral","VideoFrame","_templateObject2","OverlayVideo","_templateObject3","Conein","_templateObject4","SearchInput","_templateObject5","BntSearch","_templateObject6","WraperContainer","_templateObject7","Search","_templateObject8","LinkPoster","Link","_templateObject9","List","_templateObject10","Listli","_templateObject11","Card","_templateObject12","Container","_templateObject13","CardBack","_templateObject14","CardFront","_templateObject15","Overlay","_templateObject16","ImageCard","_templateObject17","_useMoviePageLogic","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","get","_useState","useState","_useState2","movies","setMovies","handleSearch","useCallback","fetchedMovies","t0","error","handleSearchRef","useRef","useEffect","current","handleInputChange","e","target","value","useMoviePageLogic","_jsx","children","_jsxs","autoPlay","loop","muted","type","src","onChange","placeholder","onClick","map","movie","to","id","state","from","backdrop_path","alt","title"],"sourceRoot":""}