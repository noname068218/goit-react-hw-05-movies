{"version":3,"file":"static/js/949.b2411a32.chunk.js","mappings":"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","sources":["components/Api/api.js","components/hooks.js","components/AllStyle/cast.style.js","components/pages/Cast.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '517b052a4f931bad1801acfa9e9ff07e';\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\nexport const fetchTrendingMovies = async () => {\n  return await axios\n    .get(`/3/trending/movie/day?api_key=${API_KEY}`)\n    .then(response => response.data.results)\n    .catch(err => console.log(err));\n};\n\nexport const fetchMovieDetailsById = async movieId => {\n  return await axios\n    .get(`/3/movie/${movieId}?api_key=${API_KEY}`)\n    .then(r => r.data);\n};\n\nexport const fetchActors = async movieId => {\n  return await axios\n    .get(`/3/movie/${movieId}/credits?api_key=${API_KEY}`)\n    .then(r => r.data.cast);\n};\n\nexport const fetchReviews = async movieId => {\n  return await axios\n    .get(`/3/movie/${movieId}/reviews?api_key=${API_KEY}`)\n    .then(r => r.data.results);\n};\n\nexport const fetchMoviesByQuery = async query => {\n  return await axios\n    .get(`/3/search/movie?query=${query}&api_key=${API_KEY}`)\n    .then(r => r.data.results);\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  fetchActors,\n  fetchMovieDetailsById,\n  fetchTrendingMovies,\n  fetchReviews,\n} from 'components/Api/api';\n\nexport const useDataFetching = dataType => {\n  const { movieId } = useParams();\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n\n        switch (dataType) {\n          case 'actors':\n            const fetchedActors = await fetchActors(movieId);\n            setData(fetchedActors);\n            break;\n          case 'movieDetails':\n            const fetchedMovieDetails = await fetchMovieDetailsById(movieId);\n            setData(fetchedMovieDetails);\n            break;\n          case 'trendingMovies':\n            const fetchedTrendingMovies = await fetchTrendingMovies();\n            setData(fetchedTrendingMovies);\n            break;\n          case 'reviews':\n            const fetchedReviews = await fetchReviews(movieId);\n            setData(fetchedReviews);\n            break;\n          default:\n            break;\n        }\n      } catch (error) {\n        console.error('Error', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [movieId, dataType]);\n\n  return { data, isLoading };\n};\n","import styled from 'styled-components';\n\nexport const Card = styled.div`\n  position: relative;\n  width: 300px;\n  height: 400px;\n  margin: 20px;\n  border-radius: 10px;\n  overflow: hidden;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease-in-out;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const Container = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  border-radius: 10px;\n  overflow: hidden;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  list-style-type: none;\n  padding: 0;\n`;\n\nexport const Listli = styled.li`\n  list-style-type: none;\n`;\n\nexport const CardBack = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  border-radius: 10px;\n  overflow: hidden;\n`;\n\nexport const ImageCard = styled.img`\n  object-fit: cover;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const CardFront = styled.p`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-size: 20px;\n  font-weight: bold;\n  color: #fff;\n  text-align: center;\n  z-index: 2;\n  opacity: 0;\n  transition: opacity 0.3s ease-in-out;\n\n  ${Card}:hover & {\n    opacity: 1;\n  }\n`;\n\nexport const Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  border-radius: 10px;\n  z-index: 1;\n  opacity: 0;\n  transition: opacity 0.3s ease-in-out;\n\n  ${Card}:hover & {\n    opacity: 1;\n  }\n`;\n","import { useDataFetching } from 'components/hooks';\nimport {\n  Listli,\n  Card,\n  Container,\n  CardBack,\n  ImageCard,\n  CardFront,\n  Overlay,\n  List,\n} from 'components/AllStyle/cast.style';\nimport NoImage from '../No-picture.png';\nexport default function Cast() {\n  const { data: cast, isLoading: isCastLoading } = useDataFetching('actors');\n  return (\n    <div>\n      {isCastLoading ? (\n        <p>Loading...</p>\n      ) : (\n        <List>\n          {cast.map(casts => (\n            <Listli key={casts.id}>\n              <Card>\n                <Container>\n                  <CardBack>\n                    {casts.profile_path ? (\n                      <ImageCard\n                        src={`https://image.tmdb.org/t/p/w300${casts.profile_path}`}\n                        alt={casts.name}\n                      />\n                    ) : (\n                      <ImageCard src={NoImage} alt=\"not available\" />\n                    )}\n                    <Overlay />\n                    <CardFront>{casts.character}</CardFront>\n                  </CardBack>\n                </Container>\n              </Card>\n            </Listli>\n          ))}\n        </List>\n      )}\n    </div>\n  );\n}\n"],"names":["API_KEY","axios","fetchTrendingMovies","async","concat","then","response","data","results","catch","err","console","log","fetchMovieDetailsById","movieId","r","fetchActors","cast","fetchReviews","fetchMoviesByQuery","query","useDataFetching","dataType","useParams","setData","useState","isLoading","setIsLoading","useEffect","fetchedActors","fetchedMovieDetails","fetchedTrendingMovies","fetchedReviews","error","fetchData","Card","styled","_templateObject","_taggedTemplateLiteral","Container","_templateObject2","List","_templateObject3","Listli","_templateObject4","CardBack","_templateObject5","ImageCard","_templateObject6","CardFront","_templateObject7","Overlay","_templateObject8","Cast","isCastLoading","_jsx","children","map","casts","_jsxs","profile_path","src","alt","name","NoImage","character","id"],"sourceRoot":""}