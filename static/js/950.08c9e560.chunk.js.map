{"version":3,"file":"static/js/950.08c9e560.chunk.js","mappings":"mMAEA,MAAMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,6BAElB,MAAMC,EAAsBC,eACpBF,EAAAA,EAAAA,IACN,iCAADG,OAAkCJ,IACrCK,MAAKC,GAAYA,EAASC,KAAKC,UAC/BC,OAAMC,GAAOC,QAAQC,IAAIF,KAGjBG,EAAwBV,eACtBF,EAAAA,EAAAA,IACN,YAADG,OAAaU,EAAO,aAAAV,OAAYJ,IACnCK,MAAKU,GAAKA,EAAER,OAGJS,EAAcb,eACZF,EAAAA,EAAAA,IACN,YAADG,OAAaU,EAAO,qBAAAV,OAAoBJ,IAC3CK,MAAKU,GAAKA,EAAER,KAAKU,OAGTC,EAAef,eACbF,EAAAA,EAAAA,IACN,YAADG,OAAaU,EAAO,qBAAAV,OAAoBJ,IAC3CK,MAAKU,GAAKA,EAAER,KAAKC,UAGTW,EAAqBhB,eACnBF,EAAAA,EAAAA,IACN,yBAADG,OAA0BgB,EAAK,aAAAhB,OAAYJ,IAC9CK,MAAKU,GAAKA,EAAER,KAAKC,S,gECxBf,MAAMa,EAAkBC,IAC7B,MAAM,QAAER,IAAYS,EAAAA,EAAAA,OACbhB,EAAMiB,IAAWC,EAAAA,EAAAA,UAAS,KAC1BC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,GAqC3C,OAnCAG,EAAAA,EAAAA,YAAU,KACUzB,WAChB,IAGE,OAFAwB,GAAa,GAELL,GACN,IAAK,SACH,MAAMO,QAAsBb,EAAAA,EAAAA,IAAYF,GACxCU,EAAQK,GACR,MACF,IAAK,eACH,MAAMC,QAA4BjB,EAAAA,EAAAA,IAAsBC,GACxDU,EAAQM,GACR,MACF,IAAK,iBACH,MAAMC,QAA8B7B,EAAAA,EAAAA,MACpCsB,EAAQO,GACR,MACF,IAAK,UACH,MAAMC,QAAuBd,EAAAA,EAAAA,IAAaJ,GAC1CU,EAAQQ,GAKd,CAAE,MAAOC,GACPtB,QAAQsB,MAAM,QAASA,EACzB,CAAC,QACCN,GAAa,EACf,GAGFO,EAAW,GACV,CAACpB,EAASQ,IAEN,CAAEf,OAAMmB,YAAW,C,mFC/CrB,MAAMS,EAAOC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kWAgBjBC,EAAWH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,2BAIpBG,EAAkBL,EAAAA,GAAAA,EAAQM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,2B,aCfxB,SAASK,IACtB,MAAQpC,KAAMqC,EAAO,UAAElB,IAAcL,EAAAA,EAAAA,GAAgB,WAErD,OACEwB,EAAAA,EAAAA,KAAA,OAAAC,SACGpB,GACCmB,EAAAA,EAAAA,KAAA,KAAAC,SAAG,eACDF,GAAWA,EAAQG,OAAS,GAC9BF,EAAAA,EAAAA,KAACV,EAAI,CAAAW,UACHD,EAAAA,EAAAA,KAAA,MAAAC,SACGF,EAAQI,KAAI,CAACC,EAAQC,KACpBC,EAAAA,EAAAA,MAAA,MAAAL,SAAA,EACED,EAAAA,EAAAA,KAACN,EAAQ,CAAAO,SAAEG,EAAOG,UAClBP,EAAAA,EAAAA,KAACJ,EAAe,CAAAK,SAAEG,EAAOI,YAFlBH,UAQfL,EAAAA,EAAAA,KAACJ,EAAe,CAAAK,SAAC,gBAIzB,C","sources":["Services/api.js","hooks/useDataFetching.js","pages/ReviewsPage/ReviewsStyle.js","pages/ReviewsPage/Reviews.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '517b052a4f931bad1801acfa9e9ff07e';\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\nexport const fetchTrendingMovies = async () => {\n  return await axios\n    .get(`/3/trending/movie/day?api_key=${API_KEY}`)\n    .then(response => response.data.results)\n    .catch(err => console.log(err));\n};\n\nexport const fetchMovieDetailsById = async movieId => {\n  return await axios\n    .get(`/3/movie/${movieId}?api_key=${API_KEY}`)\n    .then(r => r.data);\n};\n\nexport const fetchActors = async movieId => {\n  return await axios\n    .get(`/3/movie/${movieId}/credits?api_key=${API_KEY}`)\n    .then(r => r.data.cast);\n};\n\nexport const fetchReviews = async movieId => {\n  return await axios\n    .get(`/3/movie/${movieId}/reviews?api_key=${API_KEY}`)\n    .then(r => r.data.results);\n};\n\nexport const fetchMoviesByQuery = async query => {\n  return await axios\n    .get(`/3/search/movie?query=${query}&api_key=${API_KEY}`)\n    .then(r => r.data.results);\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  fetchActors,\n  fetchMovieDetailsById,\n  fetchTrendingMovies,\n  fetchReviews,\n} from 'Services/api';\n\nexport const useDataFetching = dataType => {\n  const { movieId } = useParams();\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n\n        switch (dataType) {\n          case 'actors':\n            const fetchedActors = await fetchActors(movieId);\n            setData(fetchedActors);\n            break;\n          case 'movieDetails':\n            const fetchedMovieDetails = await fetchMovieDetailsById(movieId);\n            setData(fetchedMovieDetails);\n            break;\n          case 'trendingMovies':\n            const fetchedTrendingMovies = await fetchTrendingMovies();\n            setData(fetchedTrendingMovies);\n            break;\n          case 'reviews':\n            const fetchedReviews = await fetchReviews(movieId);\n            setData(fetchedReviews);\n            break;\n          default:\n            break;\n        }\n      } catch (error) {\n        console.error('Error', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [movieId, dataType]);\n\n  return { data, isLoading };\n};\n","import styled from 'styled-components';\n\nexport const Card = styled.div`\n  display: block;\n  position: relative;\n  max-width: 1000px;\n  height: auto;\n  background-color: #f2f8f9;\n  border-radius: 10px;\n  padding: 2em 1.2em;\n  margin: 12px;\n  text-decoration: none;\n  z-index: 0;\n  overflow: hidden;\n  background: linear-gradient(to bottom, #c3e6ec, #a7d1d9);\n  font-family: Arial, Helvetica, sans-serif;\n`;\n\nexport const MainText = styled.h2`\n  color: black;\n`;\n\nexport const DescriptionText = styled.p`\n  color: black;\n`;\n","import { useDataFetching } from 'hooks/useDataFetching';\nimport {\n  Card,\n  MainText,\n  DescriptionText,\n} from 'pages/ReviewsPage/ReviewsStyle';\n\nexport default function Reviews() {\n  const { data: reviews, isLoading } = useDataFetching('reviews');\n\n  return (\n    <div>\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : reviews && reviews.length > 0 ? (\n        <Card>\n          <ul>\n            {reviews.map((review, index) => (\n              <li key={index}>\n                <MainText>{review.author}</MainText>\n                <DescriptionText>{review.content}</DescriptionText>\n              </li>\n            ))}\n          </ul>\n        </Card>\n      ) : (\n        <DescriptionText>No reviews</DescriptionText>\n      )}\n    </div>\n  );\n}\n"],"names":["API_KEY","axios","fetchTrendingMovies","async","concat","then","response","data","results","catch","err","console","log","fetchMovieDetailsById","movieId","r","fetchActors","cast","fetchReviews","fetchMoviesByQuery","query","useDataFetching","dataType","useParams","setData","useState","isLoading","setIsLoading","useEffect","fetchedActors","fetchedMovieDetails","fetchedTrendingMovies","fetchedReviews","error","fetchData","Card","styled","_templateObject","_taggedTemplateLiteral","MainText","_templateObject2","DescriptionText","_templateObject3","Reviews","reviews","_jsx","children","length","map","review","index","_jsxs","author","content"],"sourceRoot":""}