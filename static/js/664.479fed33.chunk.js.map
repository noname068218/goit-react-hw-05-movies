{"version":3,"file":"static/js/664.479fed33.chunk.js","mappings":"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","sources":["components/Api/api.js","components/hooks.js","components/Animations/LoadingSpiner.js","components/MovieDetalis/MovieDetails.style.js","components/pages/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '517b052a4f931bad1801acfa9e9ff07e';\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\nexport const fetchTrendingMovies = async () => {\n  return await axios\n    .get(`/3/trending/movie/day?api_key=${API_KEY}`)\n    .then(response => response.data.results)\n    .catch(err => console.log(err));\n};\n\nexport const fetchMovieDetailsById = async movieId => {\n  return await axios\n    .get(`/3/movie/${movieId}?api_key=${API_KEY}`)\n    .then(r => r.data);\n};\n\nexport const fetchActors = async movieId => {\n  return await axios\n    .get(`/3/movie/${movieId}/credits?api_key=${API_KEY}`)\n    .then(r => r.data.cast);\n};\n\nexport const fetchReviews = async movieId => {\n  return await axios\n    .get(`/3/movie/${movieId}/reviews?api_key=${API_KEY}`)\n    .then(r => r.data.results);\n};\n\nexport const fetchMoviesByQuery = async query => {\n  return await axios\n    .get(`/3/search/movie?query=${query}&api_key=${API_KEY}`)\n    .then(r => r.data.results);\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  fetchActors,\n  fetchMovieDetailsById,\n  fetchTrendingMovies,\n  fetchReviews,\n} from 'components/Api/api';\n\nexport const useDataFetching = dataType => {\n  const { movieId } = useParams();\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n\n        switch (dataType) {\n          case 'actors':\n            const fetchedActors = await fetchActors(movieId);\n            setData(fetchedActors);\n            break;\n          case 'movieDetails':\n            const fetchedMovieDetails = await fetchMovieDetailsById(movieId);\n            setData(fetchedMovieDetails);\n            break;\n          case 'trendingMovies':\n            const fetchedTrendingMovies = await fetchTrendingMovies();\n            setData(fetchedTrendingMovies);\n            break;\n          case 'reviews':\n            const fetchedReviews = await fetchReviews(movieId);\n            setData(fetchedReviews);\n            break;\n          default:\n            break;\n        }\n      } catch (error) {\n        console.error('Error', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [movieId, dataType]);\n\n  return { data, isLoading };\n};\n","import React from 'react';\nimport './Laoding.css';\nexport const Loader = () => {\n  return (\n    <div className=\"loop cubes\">\n      <div className=\"item cubes\"></div>\n      <div className=\"item cubes\"></div>\n      <div className=\"item cubes\"></div>\n      <div className=\"item cubes\"></div>\n      <div className=\"item cubes\"></div>\n      <div className=\"item cubes\"></div>\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilmCard = styled.img`\n  width: 300px;\n`;\n","import { Link, Outlet, useLocation } from 'react-router-dom';\nimport { Loader } from '../Animations/LoadingSpiner';\nimport { useDataFetching } from 'components/hooks';\nimport { FilmCard } from 'components/MovieDetalis/MovieDetails.style';\nimport { useRef } from 'react';\n\nconst MovieDetails = () => {\n  const { data: movieDetails, isLoading: isMovieDetailsLoading } =\n    useDataFetching('movieDetails');\n  const location = useLocation();\n  const backLinkRef = useRef(location);\n  return (\n    <div>\n      {isMovieDetailsLoading ? (\n        <Loader />\n      ) : (\n        <div>\n          <Link to={backLinkRef.current.state?.from ?? '/'}>\n            <button>Go Home</button>\n          </Link>\n\n          <h2>{movieDetails.title}</h2>\n          <p>{movieDetails.overview}</p>\n          <h2>Gener</h2>\n          {movieDetails.genres &&\n            movieDetails.genres.map(gener => (\n              <p key={gener.id}>{gener.name}</p>\n            ))}\n          {movieDetails.backdrop_path ? (\n            <FilmCard\n              src={`https://image.tmdb.org/t/p/original${movieDetails.backdrop_path}`}\n              alt={movieDetails.title}\n            />\n          ) : (\n            <span>No Image Available</span>\n          )}\n\n          <ul>\n            <li>\n              <Link to=\"cast\">Cast</Link>\n            </li>\n            <li>\n              <Link to=\"reviews\">Reviews</Link>\n            </li>\n          </ul>\n          <Outlet />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","axios","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","concat","then","response","data","results","catch","err","console","log","abrupt","sent","stop","apply","arguments","fetchMovieDetailsById","_ref2","_callee2","movieId","_context2","r","_x","fetchActors","_ref3","_callee3","_context3","cast","_x2","fetchReviews","_ref4","_callee4","_context4","_x3","fetchMoviesByQuery","_ref5","_callee5","query","_context5","_x4","useDataFetching","dataType","useParams","_useState","useState","_useState2","_slicedToArray","setData","_useState3","_useState4","isLoading","setIsLoading","useEffect","fetchData","fetchedActors","fetchedMovieDetails","fetchedTrendingMovies","fetchedReviews","t0","t1","error","finish","Loader","_jsxs","className","children","_jsx","FilmCard","styled","_templateObject","_taggedTemplateLiteral","_backLinkRef$current$","_backLinkRef$current$2","_useDataFetching","movieDetails","isMovieDetailsLoading","location","useLocation","backLinkRef","useRef","Link","to","current","state","from","title","overview","genres","map","gener","name","id","backdrop_path","src","alt","Outlet"],"sourceRoot":""}