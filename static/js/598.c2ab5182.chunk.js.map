{"version":3,"file":"static/js/598.c2ab5182.chunk.js","mappings":"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","sources":["components/Api/api.js","components/HomePage/HomeLogic.js","components/HomePage/Home.style.js","components/pages/HomePage.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '517b052a4f931bad1801acfa9e9ff07e';\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\nexport const fetchTrendingMovies = async () => {\n  return await axios\n    .get(`/3/trending/movie/day?api_key=${API_KEY}`)\n    .then(response => response.data.results)\n    .catch(err => console.log(err));\n};\n\nexport const fetchMovieDetailsById = async movieId => {\n  return await axios\n    .get(`/3/movie/${movieId}?api_key=${API_KEY}`)\n    .then(r => r.data);\n};\n\nexport const fetchActors = async movieId => {\n  return await axios\n    .get(`/3/movie/${movieId}/credits?api_key=${API_KEY}`)\n    .then(r => r.data.cast);\n};\n\nexport const fetchReviews = async movieId => {\n  return await axios\n    .get(`/3/movie/${movieId}/reviews?api_key=${API_KEY}`)\n    .then(r => r.data.results);\n};\n\nexport const fetchMoviesByQuery = async query => {\n  return await axios\n    .get(`/3/search/movie?query=${query}&api_key=${API_KEY}`)\n    .then(r => r.data.results);\n};\n","import { useState, useEffect } from 'react';\nimport { fetchTrendingMovies } from '../Api/api';\n\nexport const useHomePageLogic = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [isLoading, setisLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setisLoading(true);\n\n        const fetchedHome = await fetchTrendingMovies();\n\n        setTrendingMovies(fetchedHome);\n      } catch (error) {\n        console.error('Error', error);\n      } finally {\n        setisLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const uniqueMovies = Array.from(\n    new Set(trendingMovies.map(movie => movie.id))\n  );\n\n  return { trendingMovies, isLoading, uniqueMovies };\n};\n","import styled from 'styled-components';\n\nexport const Card = styled.div`\n  position: relative;\n  width: 300px;\n  height: 400px;\n  margin: 20px;\n  border-radius: 10px;\n  overflow: hidden;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease-in-out;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const Container = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  border-radius: 10px;\n  overflow: hidden;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  list-style-type: none;\n  padding: 0;\n`;\n\nexport const Listli = styled.li`\n  list-style-type: none;\n`;\n\nexport const CardBack = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  border-radius: 10px;\n  overflow: hidden;\n`;\n\nexport const ImageCard = styled.img`\n  object-fit: cover;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const CardFront = styled.p`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-size: 20px;\n  font-weight: bold;\n  color: #fff;\n  text-align: center;\n  z-index: 2;\n  opacity: 0;\n  transition: opacity 0.3s ease-in-out;\n\n  ${Card}:hover & {\n    opacity: 1;\n  }\n`;\n\nexport const Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  border-radius: 10px;\n  z-index: 1;\n  opacity: 0;\n  transition: opacity 0.3s ease-in-out;\n\n  ${Card}:hover & {\n    opacity: 1;\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport { useHomePageLogic } from 'components/HomePage/HomeLogic';\nimport {\n  Card,\n  Container,\n  ImageCard,\n  List,\n  Listli,\n  CardBack,\n  CardFront,\n  Overlay,\n} from 'components/HomePage/Home.style';\n\nexport default function HomePage() {\n  const { trendingMovies, isLoading, uniqueMovies } = useHomePageLogic();\n\n  return (\n    <List>\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : (\n        uniqueMovies.map((movieId, index) => {\n          const movie = trendingMovies.find(movie => movie.id === movieId);\n\n          return (\n            <Listli key={index}>\n              <Card>\n                <Container>\n                  <CardBack>\n                    <Link to={`/movies/${movie.id}`} state={{ from: '/' }}>\n                      {movie.backdrop_path ? (\n                        <ImageCard\n                          src={`https://image.tmdb.org/t/p/original${movie.backdrop_path}`}\n                          alt={movie.title}\n                        />\n                      ) : (\n                        <span>No Image Available</span>\n                      )}\n                      <Overlay />\n                      <CardFront>{movie.title}</CardFront>\n                    </Link>\n                  </CardBack>\n                </Container>\n              </Card>\n            </Listli>\n          );\n        })\n      )}\n    </List>\n  );\n}\n"],"names":["API_KEY","axios","fetchTrendingMovies","async","concat","then","response","data","results","catch","err","console","log","fetchMovieDetailsById","movieId","r","fetchActors","cast","fetchReviews","fetchMoviesByQuery","query","useHomePageLogic","trendingMovies","setTrendingMovies","useState","isLoading","setisLoading","useEffect","fetchedHome","error","fetchData","uniqueMovies","Array","from","Set","map","movie","id","Card","styled","_templateObject","_taggedTemplateLiteral","Container","_templateObject2","List","_templateObject3","Listli","_templateObject4","CardBack","_templateObject5","ImageCard","_templateObject6","CardFront","_templateObject7","Overlay","_templateObject8","HomePage","_jsx","children","index","find","_jsxs","Link","to","state","backdrop_path","src","alt","title"],"sourceRoot":""}