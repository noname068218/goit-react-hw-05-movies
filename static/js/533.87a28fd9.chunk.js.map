{"version":3,"file":"static/js/533.87a28fd9.chunk.js","mappings":"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","sources":["Services/api.js","pages/HomePage/Home.style.js","components/Animations/MoviesList.js","pages/MoviePage/Search.style.js","pages/MoviePage/MoviesPage.js","hooks/useMoviePageLogic.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '517b052a4f931bad1801acfa9e9ff07e';\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\nexport const fetchTrendingMovies = async () => {\n  return await axios\n    .get(`/3/trending/movie/day?api_key=${API_KEY}`)\n    .then(response => response.data.results)\n    .catch(err => console.log(err));\n};\n\nexport const fetchMovieDetailsById = async movieId => {\n  return await axios\n    .get(`/3/movie/${movieId}?api_key=${API_KEY}`)\n    .then(r => r.data);\n};\n\nexport const fetchActors = async movieId => {\n  return await axios\n    .get(`/3/movie/${movieId}/credits?api_key=${API_KEY}`)\n    .then(r => r.data.cast);\n};\n\nexport const fetchReviews = async movieId => {\n  return await axios\n    .get(`/3/movie/${movieId}/reviews?api_key=${API_KEY}`)\n    .then(r => r.data.results);\n};\n\nexport const fetchMoviesByQuery = async query => {\n  return await axios\n    .get(`/3/search/movie?query=${query}&api_key=${API_KEY}`)\n    .then(r => r.data.results);\n};\n","import styled from 'styled-components';\n\nexport const Card = styled.div`\n  position: relative;\n  width: 300px;\n  height: 400px;\n  margin: 20px;\n  border-radius: 10px;\n  overflow: hidden;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease-in-out;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const Container = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  border-radius: 10px;\n  overflow: hidden;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  list-style-type: none;\n  padding: 0;\n`;\n\nexport const Listli = styled.li`\n  list-style-type: none;\n`;\n\nexport const CardBack = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  border-radius: 10px;\n  overflow: hidden;\n`;\n\nexport const ImageCard = styled.img`\n  object-fit: cover;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const CardFront = styled.p`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-size: 20px;\n  font-weight: bold;\n  color: #fff;\n  text-align: center;\n  z-index: 2;\n  opacity: 0;\n  transition: opacity 0.3s ease-in-out;\n\n  ${Card}:hover & {\n    opacity: 1;\n  }\n`;\n\nexport const Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  border-radius: 10px;\n  z-index: 1;\n  opacity: 0;\n  transition: opacity 0.3s ease-in-out;\n\n  ${Card}:hover & {\n    opacity: 1;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\n\nimport {\n  Card,\n  Container,\n  ImageCard,\n  List,\n  Listli,\n  CardBack,\n  CardFront,\n  Overlay,\n} from 'pages/HomePage/Home.style';\nimport noImage from './picture.png';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(movie => {\n        return (\n          <Listli key={movie.id}>\n            <Card>\n              <Container>\n                <CardBack>\n                  <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                    {movie.backdrop_path ? (\n                      <ImageCard\n                        src={`https://image.tmdb.org/t/p/original${movie.backdrop_path}`}\n                        alt={movie.title}\n                      />\n                    ) : (\n                      <ImageCard src={noImage} alt=\"noimage\" />\n                    )}\n                    <Overlay />\n                    <CardFront>{movie.title}</CardFront>\n                  </Link>\n                </CardBack>\n              </Container>\n            </Card>\n          </Listli>\n        );\n      })}\n    </List>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MainBackground = styled.div`\n  width: 100%;\n  height: 100vh;\n`;\n\nexport const VideoFrame = styled.video`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  position: fixed;\n`;\nexport const OverlayVideo = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.7);\n`;\n\nexport const Conein = styled.section`\n  background-color: aliceblue;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const SearchInput = styled.input`\n  padding: 10px;\n  width: 120px;\n  border: none;\n  outline: none;\n  border-radius: 5px;\n  box-shadow: 0 1px gray;\n  font-size: 18px;\n  transition: width 0.3s;\n  font-family: Consolas, monaco, monospace;\n  &:focus {\n    outline: 1px solid blue;\n    box-shadow: none;\n    width: 230px;\n  }\n\n  ::placeholder {\n    color: blue;\n  }\n`;\n\nexport const BntSearch = styled.button`\n  position: relative;\n  top: 0;\n  left: 0;\n  margin-top: 30px;\n  color: #090909;\n  padding: 0.7em 1.7em;\n  font-size: 18px;\n  border-radius: 0.5em;\n  background: #e8e8e8;\n  border: 1px solid #e8e8e8;\n  transition: all 0.3s;\n  box-shadow: 6px 6px 12px #c5c5c5, -6px -6px 12px #ffffff;\n\n  &:active {\n    color: #666;\n    box-shadow: inset 4px 4px 12px #c5c5c5, inset -4px -4px 12px #ffffff;\n  }\n`;\nexport const WraperContainer = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const Search = styled.div`\n  position: relative;\n  top: 0;\n  left: 0;\n`;\n\nexport const LinkPoster = styled(Link)`\n  width: 100%;\n  box-shadow: 0 5px 20px 3px rgba(0, 0, 0, 0.6);\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  list-style-type: none;\n  padding: 0;\n`;\n\nexport const Listli = styled.li`\n  list-style-type: none;\n`;\n\nexport const Card = styled.div`\n  position: relative;\n  width: 300px;\n  height: 400px;\n  margin: 20px;\n  border-radius: 10px;\n  overflow: hidden;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease-in-out;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\nexport const Container = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  border-radius: 10px;\n  overflow: hidden;\n`;\n\nexport const CardBack = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  border-radius: 10px;\n  overflow: hidden;\n`;\n\nexport const CardFront = styled.p`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-size: 20px;\n  font-weight: bold;\n  color: #fff;\n  text-align: center;\n  z-index: 2;\n  opacity: 0;\n  transition: opacity 0.3s ease-in-out;\n\n  ${Card}:hover & {\n    opacity: 1;\n  }\n`;\n\nexport const Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  border-radius: 10px;\n  z-index: 1;\n  opacity: 0;\n  transition: opacity 0.3s ease-in-out;\n\n  ${Card}:hover & {\n    opacity: 1;\n  }\n`;\n\nexport const ImageCard = styled.img`\n  object-fit: cover;\n  width: 100%;\n  height: 100%;\n`;\n","import React from 'react';\nimport { useMoviePageLogic } from 'hooks/useMoviePageLogic';\nimport {\n  WraperContainer,\n  SearchInput,\n  Search,\n  BntSearch,\n  Conein,\n  MainBackground,\n  VideoFrame,\n  OverlayVideo,\n} from 'pages/MoviePage/Search.style';\nimport { MovieList } from 'components/Animations/MoviesList';\n\nconst MoviePage = () => {\n  const { query, movies, handleSubmit } = useMoviePageLogic();\n\n  return (\n    <MainBackground>\n      <WraperContainer>\n        <VideoFrame autoPlay loop muted>\n          <source\n            type=\"video/mp4\"\n            src=\"https://static.pexels.com/lib/videos/free-videos.mp4\"\n          />\n        </VideoFrame>\n        <OverlayVideo />\n        <Conein>\n          <form onSubmit={handleSubmit}>\n            <Search>\n              <SearchInput\n                defaultValue={query}\n                type=\"text\"\n                name={'query'}\n                placeholder=\"Enter movie title...\"\n              />\n            </Search>\n            <BntSearch type=\"submit\">Search</BntSearch>\n          </form>\n          <MovieList movies={movies} />\n        </Conein>\n      </WraperContainer>\n    </MainBackground>\n  );\n};\n\nexport default MoviePage;\n","import { useState, useEffect, useCallback } from 'react';\nimport { fetchMoviesByQuery } from 'Services/api';\nimport { useSearchParams } from 'react-router-dom';\n\nexport const useMoviePageLogic = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n  const [movies, setMovies] = useState([]);\n\n  const handleSearch = useCallback(async () => {\n    try {\n      const fetchedMovies = await fetchMoviesByQuery(query);\n      setMovies(fetchedMovies);\n    } catch (error) {\n      console.error('Error fetching movies:', error);\n    }\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const query = e.target.query.value.trim().toLowerCase();\n    setSearchParams({ query: query });\n  };\n\n  useEffect(() => {\n    if (!query) return;\n    handleSearch();\n  }, [query, handleSearch]);\n\n  return {\n    query,\n    movies,\n    handleSubmit,\n  };\n};\n"],"names":["API_KEY","axios","fetchTrendingMovies","async","concat","then","response","data","results","catch","err","console","log","fetchMovieDetailsById","movieId","r","fetchActors","cast","fetchReviews","fetchMoviesByQuery","query","Card","styled","_templateObject","_taggedTemplateLiteral","Container","_templateObject2","List","_templateObject3","Listli","_templateObject4","CardBack","_templateObject5","ImageCard","_templateObject6","CardFront","_templateObject7","Overlay","_templateObject8","MovieList","_ref","movies","location","useLocation","_jsx","children","map","movie","_jsxs","Link","to","id","state","from","backdrop_path","src","alt","title","MainBackground","VideoFrame","OverlayVideo","Conein","SearchInput","BntSearch","WraperContainer","Search","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","MoviePage","handleSubmit","useMoviePageLogic","searchParams","setSearchParams","useSearchParams","get","setMovies","useState","handleSearch","useCallback","fetchedMovies","error","useEffect","e","preventDefault","target","value","trim","toLowerCase","autoPlay","loop","muted","type","onSubmit","defaultValue","name","placeholder"],"sourceRoot":""}