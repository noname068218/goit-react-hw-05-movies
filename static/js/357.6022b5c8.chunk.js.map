{"version":3,"file":"static/js/357.6022b5c8.chunk.js","mappings":"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","sources":["components/Api/api.js","components/pages/MoviesPage.js","MovieSearchLogic/MovieSearch.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '517b052a4f931bad1801acfa9e9ff07e';\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\nexport const fetchTrendingMovies = async () => {\n  return await axios\n    .get(`/3/trending/movie/day?api_key=${API_KEY}`)\n    .then(response => response.data.results)\n    .catch(err => console.log(err));\n};\n\nexport const fetchMovieDetailsById = async movieId => {\n  return await axios\n    .get(`/3/movie/${movieId}?api_key=${API_KEY}`)\n    .then(r => r.data);\n};\n\nexport const fetchActors = async movieId => {\n  return await axios\n    .get(`/3/movie/${movieId}/credits?api_key=${API_KEY}`)\n    .then(r => r.data.cast);\n};\n\nexport const fetchReviews = async movieId => {\n  return await axios\n    .get(`/3/movie/${movieId}/reviews?api_key=${API_KEY}`)\n    .then(r => r.data.results);\n};\n\nexport const fetchMoviesByQuery = async query => {\n  return await axios\n    .get(`/3/search/movie?query=${query}&api_key=${API_KEY}`)\n    .then(r => r.data.results);\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMoviePageLogic } from 'MovieSearchLogic/MovieSearch';\n\nconst MoviePage = () => {\n  const { query, movies, handleInputChange, handleSearch } =\n    useMoviePageLogic();\n\n  return (\n    <div>\n      <h1>Movie Page</h1>\n      <input\n        type=\"text\"\n        value={query}\n        onChange={handleInputChange}\n        placeholder=\"Enter movie title...\"\n      />\n      <button onClick={handleSearch}>Search</button>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link\n              to={`/movies/${movie.id}`}\n              state={{ from: '/movies?query=' + query }}\n            >\n              {movie.backdrop_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/original${movie.backdrop_path}`}\n                  alt={movie.title}\n                />\n              ) : (\n                <span>No Image Available</span>\n              )}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MoviePage;\n","import { useState, useEffect, useCallback } from 'react';\nimport { fetchMoviesByQuery } from 'components/Api/api';\nimport { useSearchParams } from 'react-router-dom';\n\n// ... (imports)\n\n// ... (imports)\n\nexport const useMoviePageLogic = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n  const [movies, setMovies] = useState([]);\n\n  const handleSearch = useCallback(async () => {\n    try {\n      const fetchedMovies = await fetchMoviesByQuery(query);\n      setMovies(fetchedMovies);\n    } catch (error) {\n      console.error('Error fetching movies:', error);\n    }\n  }, [query]);\n\n  useEffect(() => {\n    handleSearch();\n  }, [handleSearch]);\n\n  const handleInputChange = e => {\n    setSearchParams({ query: e.target.value });\n  };\n\n  return {\n    query,\n    movies,\n    handleInputChange,\n    handleSearch,\n  };\n};\n"],"names":["API_KEY","axios","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","concat","then","response","data","results","catch","err","console","log","abrupt","sent","stop","apply","arguments","fetchMovieDetailsById","_ref2","_callee2","movieId","_context2","r","_x","fetchActors","_ref3","_callee3","_context3","cast","_x2","fetchReviews","_ref4","_callee4","_context4","_x3","fetchMoviesByQuery","_ref5","_callee5","query","_context5","_x4","_useMoviePageLogic","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","get","_useState","useState","_useState2","movies","setMovies","handleSearch","useCallback","fetchedMovies","t0","error","useEffect","handleInputChange","e","target","value","useMoviePageLogic","_jsxs","children","_jsx","type","onChange","placeholder","onClick","map","movie","Link","to","id","state","from","backdrop_path","src","alt","title"],"sourceRoot":""}