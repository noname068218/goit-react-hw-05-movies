{"version":3,"file":"static/js/628.eb4ce8da.chunk.js","mappings":"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","sources":["components/Api/api.js","components/PageStyle/Search.style.js","components/pages/MoviesPage.js","MovieSearchLogic/MovieSearch.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '517b052a4f931bad1801acfa9e9ff07e';\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\nexport const fetchTrendingMovies = async () => {\n  return await axios\n    .get(`/3/trending/movie/day?api_key=${API_KEY}`)\n    .then(response => response.data.results)\n    .catch(err => console.log(err));\n};\n\nexport const fetchMovieDetailsById = async movieId => {\n  return await axios\n    .get(`/3/movie/${movieId}?api_key=${API_KEY}`)\n    .then(r => r.data);\n};\n\nexport const fetchActors = async movieId => {\n  return await axios\n    .get(`/3/movie/${movieId}/credits?api_key=${API_KEY}`)\n    .then(r => r.data.cast);\n};\n\nexport const fetchReviews = async movieId => {\n  return await axios\n    .get(`/3/movie/${movieId}/reviews?api_key=${API_KEY}`)\n    .then(r => r.data.results);\n};\n\nexport const fetchMoviesByQuery = async query => {\n  return await axios\n    .get(`/3/search/movie?query=${query}&api_key=${API_KEY}`)\n    .then(r => r.data.results);\n};\n","import styled from 'styled-components';\n\nexport const Search = styled.div`\n  position: relative;\n  top: 0;\n  left: 0;\n`;\n\nexport const ContainerListImage = styled.div`\n  display: flex;\n  align-items: flex-start;\n  justify-content: center;\n  flex-wrap: wrap;\n  flex-direction: row;\n  gap: 20px;\n  margin: 0 -10px;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n`;\n\nexport const List = styled.ul`\n  max-width: 25%;\n  list-style-type: none;\n  padding: 0;\n`;\nexport const Listli = styled.li`\n  list-style-type: none;\n  flex-basis: calc(25% - 20px);\n  margin-bottom: 20px;\n`;\nexport const ImageCard = styled.img`\n  object-fit: cover;\n  width: calc(50% - 10px);\n  height: 300px;\n  border-radius: 10px;\n  transition: transform 0.3s ease-in-out;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const SearchInput = styled.input`\n  padding: 10px;\n  width: 120px;\n  border: none;\n  outline: none;\n  border-radius: 5px;\n  box-shadow: 0 1px gray;\n  font-size: 18px;\n  transition: width 0.3s;\n  font-family: Consolas, monaco, monospace;\n  &:focus {\n    outline: 1px solid blue;\n    box-shadow: none;\n    width: 230px;\n  }\n\n  ::placeholder {\n    color: blue;\n  }\n`;\n\nexport const BntSearch = styled.button`\n  position: relative;\n  top: 0;\n  left: 0;\n  margin-top: 30px;\n  color: #090909;\n  padding: 0.7em 1.7em;\n  font-size: 18px;\n  border-radius: 0.5em;\n  background: #e8e8e8;\n  border: 1px solid #e8e8e8;\n  transition: all 0.3s;\n  box-shadow: 6px 6px 12px #c5c5c5, -6px -6px 12px #ffffff;\n\n  &:active {\n    color: #666;\n    box-shadow: inset 4px 4px 12px #c5c5c5, inset -4px -4px 12px #ffffff;\n  }\n`;\nexport const WraperContainer = styled.div`\n  background: url('https://images.pexels.com/photos/109669/pexels-photo-109669.jpeg');\n  background-size: cover;\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMoviePageLogic } from 'MovieSearchLogic/MovieSearch';\nimport {\n  WraperContainer,\n  SearchInput,\n  Search,\n  BntSearch,\n  ImageCard,\n  List,\n  Listli,\n  ContainerListImage,\n  Container,\n} from 'components/PageStyle/Search.style';\nimport NoImage from '../No-picture.png';\n\nconst MoviePage = () => {\n  const { query, movies, handleInputChange, handleSearch } =\n    useMoviePageLogic();\n\n  return (\n    <WraperContainer>\n      <Search>\n        <SearchInput\n          type=\"text\"\n          value={query}\n          onChange={handleInputChange}\n          placeholder=\"Enter movie title...\"\n        />\n      </Search>\n      <BntSearch onClick={handleSearch}>Search</BntSearch>\n      <ContainerListImage>\n        <List>\n          <Container>\n            {movies.map(movie => (\n              <Listli key={movie.id}>\n                <Link\n                  to={`/movies/${movie.id}`}\n                  state={{ from: '/movies?query=' + query }}\n                >\n                  {movie.backdrop_path ? (\n                    <ImageCard\n                      src={`https://image.tmdb.org/t/p/original${movie.backdrop_path}`}\n                      alt={movie.title}\n                    />\n                  ) : (\n                    <ImageCard src={NoImage} alt=\"not available\" />\n                  )}\n                </Link>\n              </Listli>\n            ))}\n          </Container>\n        </List>\n      </ContainerListImage>\n    </WraperContainer>\n  );\n};\n\nexport default MoviePage;\n","import { useState, useEffect, useCallback, useRef } from 'react';\nimport { fetchMoviesByQuery } from 'components/Api/api';\nimport { useSearchParams } from 'react-router-dom';\n\nexport const useMoviePageLogic = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n  const [movies, setMovies] = useState([]);\n\n  const handleSearch = useCallback(async () => {\n    try {\n      const fetchedMovies = await fetchMoviesByQuery(query);\n      setMovies(fetchedMovies);\n    } catch (error) {\n      console.error('Error fetching movies:', error);\n    }\n  }, [query]);\n  const handleSearchRef = useRef(handleSearch);\n  useEffect(() => {\n    handleSearchRef.current();\n  }, []);\n\n  const handleInputChange = e => {\n    setSearchParams({ query: e.target.value });\n  };\n\n  return {\n    query,\n    movies,\n    handleInputChange,\n    handleSearch,\n  };\n};\n"],"names":["API_KEY","axios","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","concat","then","response","data","results","catch","err","console","log","abrupt","sent","stop","apply","arguments","fetchMovieDetailsById","_ref2","_callee2","movieId","_context2","r","_x","fetchActors","_ref3","_callee3","_context3","cast","_x2","fetchReviews","_ref4","_callee4","_context4","_x3","fetchMoviesByQuery","_ref5","_callee5","query","_context5","_x4","Search","styled","_templateObject","_taggedTemplateLiteral","ContainerListImage","_templateObject2","Container","_templateObject3","List","_templateObject4","Listli","_templateObject5","ImageCard","_templateObject6","SearchInput","_templateObject7","BntSearch","_templateObject8","WraperContainer","_templateObject9","_useMoviePageLogic","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","get","_useState","useState","_useState2","movies","setMovies","handleSearch","useCallback","fetchedMovies","t0","error","handleSearchRef","useRef","useEffect","current","handleInputChange","e","target","value","useMoviePageLogic","_jsxs","children","_jsx","type","onChange","placeholder","onClick","map","movie","Link","to","id","state","from","backdrop_path","src","alt","title"],"sourceRoot":""}