{"version":3,"file":"static/js/628.6ba91822.chunk.js","mappings":"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","sources":["components/Api/api.js","components/PageStyle/Search.style.js","components/pages/MoviesPage.js","MovieSearchLogic/MovieSearch.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '517b052a4f931bad1801acfa9e9ff07e';\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\nexport const fetchTrendingMovies = async () => {\n  return await axios\n    .get(`/3/trending/movie/day?api_key=${API_KEY}`)\n    .then(response => response.data.results)\n    .catch(err => console.log(err));\n};\n\nexport const fetchMovieDetailsById = async movieId => {\n  return await axios\n    .get(`/3/movie/${movieId}?api_key=${API_KEY}`)\n    .then(r => r.data);\n};\n\nexport const fetchActors = async movieId => {\n  return await axios\n    .get(`/3/movie/${movieId}/credits?api_key=${API_KEY}`)\n    .then(r => r.data.cast);\n};\n\nexport const fetchReviews = async movieId => {\n  return await axios\n    .get(`/3/movie/${movieId}/reviews?api_key=${API_KEY}`)\n    .then(r => r.data.results);\n};\n\nexport const fetchMoviesByQuery = async query => {\n  return await axios\n    .get(`/3/search/movie?query=${query}&api_key=${API_KEY}`)\n    .then(r => r.data.results);\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MainBackground = styled.div`\n  width: 100%;\n  height: 100vh;\n`;\n\nexport const VideoFrame = styled.video`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  position: fixed;\n`;\nexport const OverlayVideo = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.7);\n`;\n\nexport const Conein = styled.section`\n  background-color: aliceblue;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const SearchInput = styled.input`\n  padding: 10px;\n  width: 120px;\n  border: none;\n  outline: none;\n  border-radius: 5px;\n  box-shadow: 0 1px gray;\n  font-size: 18px;\n  transition: width 0.3s;\n  font-family: Consolas, monaco, monospace;\n  &:focus {\n    outline: 1px solid blue;\n    box-shadow: none;\n    width: 230px;\n  }\n\n  ::placeholder {\n    color: blue;\n  }\n`;\n\nexport const BntSearch = styled.button`\n  position: relative;\n  top: 0;\n  left: 0;\n  margin-top: 30px;\n  color: #090909;\n  padding: 0.7em 1.7em;\n  font-size: 18px;\n  border-radius: 0.5em;\n  background: #e8e8e8;\n  border: 1px solid #e8e8e8;\n  transition: all 0.3s;\n  box-shadow: 6px 6px 12px #c5c5c5, -6px -6px 12px #ffffff;\n\n  &:active {\n    color: #666;\n    box-shadow: inset 4px 4px 12px #c5c5c5, inset -4px -4px 12px #ffffff;\n  }\n`;\nexport const WraperContainer = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const Search = styled.div`\n  position: relative;\n  top: 0;\n  left: 0;\n`;\n\nexport const LinkPoster = styled(Link)`\n  width: 100%;\n  box-shadow: 0 5px 20px 3px rgba(0, 0, 0, 0.6);\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  list-style-type: none;\n  padding: 0;\n`;\n\nexport const Listli = styled.li`\n  list-style-type: none;\n`;\n\nexport const Card = styled.div`\n  position: relative;\n  width: 300px;\n  height: 400px;\n  margin: 20px;\n  border-radius: 10px;\n  overflow: hidden;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease-in-out;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\nexport const Container = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  border-radius: 10px;\n  overflow: hidden;\n`;\n\nexport const CardBack = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  border-radius: 10px;\n  overflow: hidden;\n`;\n\nexport const CardFront = styled.p`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-size: 20px;\n  font-weight: bold;\n  color: #fff;\n  text-align: center;\n  z-index: 2;\n  opacity: 0;\n  transition: opacity 0.3s ease-in-out;\n\n  ${Card}:hover & {\n    opacity: 1;\n  }\n`;\n\nexport const Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  border-radius: 10px;\n  z-index: 1;\n  opacity: 0;\n  transition: opacity 0.3s ease-in-out;\n\n  ${Card}:hover & {\n    opacity: 1;\n  }\n`;\n\nexport const ImageCard = styled.img`\n  object-fit: cover;\n  width: 100%;\n  height: 100%;\n`;\n","import React from 'react';\nimport { useMoviePageLogic } from 'MovieSearchLogic/MovieSearch';\nimport {\n  WraperContainer,\n  SearchInput,\n  Search,\n  BntSearch,\n  ImageCard,\n  List,\n  Listli,\n  LinkPoster,\n  Card,\n  Container,\n  CardBack,\n  CardFront,\n  Overlay,\n  Conein,\n  MainBackground,\n  VideoFrame,\n  OverlayVideo,\n} from 'components/PageStyle/Search.style';\nimport NoImage from '../No-picture.png';\n\nconst MoviePage = () => {\n  const { query, movies, handleInputChange, handleSearch } =\n    useMoviePageLogic();\n\n  return (\n    <MainBackground>\n      <WraperContainer>\n        <VideoFrame autoPlay loop muted>\n          <source\n            type=\"video/mp4\"\n            src=\"https://static.pexels.com/lib/videos/free-videos.mp4\"\n          />\n        </VideoFrame>\n        <OverlayVideo />\n        <Conein>\n          <Search>\n            <SearchInput\n              type=\"text\"\n              value={query}\n              onChange={handleInputChange}\n              placeholder=\"Enter movie title...\"\n            />\n          </Search>\n          <BntSearch onClick={handleSearch}>Search</BntSearch>\n\n          <List>\n            {movies.map(movie => (\n              <Listli key={movie.id}>\n                <Card>\n                  <Container>\n                    <CardBack>\n                      <LinkPoster\n                        to={`/movies/${movie.id}`}\n                        state={{ from: '/movies?query=' + query }}\n                      >\n                        {movie.backdrop_path ? (\n                          <ImageCard\n                            src={`https://image.tmdb.org/t/p/original${movie.backdrop_path}`}\n                            alt={movie.title}\n                          />\n                        ) : (\n                          <ImageCard src={NoImage} alt=\"not available\" />\n                        )}\n                        <Overlay />\n                        <CardFront>{movie.title}</CardFront>\n                      </LinkPoster>\n                    </CardBack>\n                  </Container>\n                </Card>\n              </Listli>\n            ))}\n          </List>\n        </Conein>\n      </WraperContainer>\n    </MainBackground>\n  );\n};\n\nexport default MoviePage;\n","import { useState, useEffect, useCallback, useRef } from 'react';\nimport { fetchMoviesByQuery } from 'components/Api/api';\nimport { useSearchParams } from 'react-router-dom';\n\nexport const useMoviePageLogic = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n  const [movies, setMovies] = useState([]);\n\n  const handleSearch = useCallback(async () => {\n    try {\n      const fetchedMovies = await fetchMoviesByQuery(query);\n      setMovies(fetchedMovies);\n    } catch (error) {\n      console.error('Error fetching movies:', error);\n    }\n  }, [query]);\n  const handleSearchRef = useRef(handleSearch);\n  useEffect(() => {\n    handleSearchRef.current();\n  }, []);\n\n  const handleInputChange = e => {\n    setSearchParams({ query: e.target.value });\n  };\n\n  return {\n    query,\n    movies,\n    handleInputChange,\n    handleSearch,\n  };\n};\n"],"names":["API_KEY","axios","fetchTrendingMovies","async","concat","then","response","data","results","catch","err","console","log","fetchMovieDetailsById","movieId","r","fetchActors","cast","fetchReviews","fetchMoviesByQuery","query","MainBackground","styled","_templateObject","_taggedTemplateLiteral","VideoFrame","_templateObject2","OverlayVideo","_templateObject3","Conein","_templateObject4","SearchInput","_templateObject5","BntSearch","_templateObject6","WraperContainer","_templateObject7","Search","_templateObject8","LinkPoster","Link","_templateObject9","List","_templateObject10","Listli","_templateObject11","Card","_templateObject12","Container","_templateObject13","CardBack","_templateObject14","CardFront","_templateObject15","Overlay","_templateObject16","ImageCard","_templateObject17","MoviePage","movies","handleInputChange","handleSearch","useMoviePageLogic","searchParams","setSearchParams","useSearchParams","get","setMovies","useState","useCallback","fetchedMovies","error","handleSearchRef","useRef","useEffect","current","e","target","value","_jsx","children","_jsxs","autoPlay","loop","muted","type","src","onChange","placeholder","onClick","map","movie","to","id","state","from","backdrop_path","alt","title"],"sourceRoot":""}