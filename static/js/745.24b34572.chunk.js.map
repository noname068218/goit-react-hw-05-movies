{"version":3,"file":"static/js/745.24b34572.chunk.js","mappings":"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","sources":["components/Api/api.js","components/pages/HomePage.js","components/HomePage/HomeLogic.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '517b052a4f931bad1801acfa9e9ff07e';\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\nexport const fetchTrendingMovies = async () => {\n  return await axios\n    .get(`/3/trending/movie/day?api_key=${API_KEY}`)\n    .then(response => response.data.results)\n    .catch(err => console.log(err));\n};\n\nexport const fetchMovieDetailsById = async movieId => {\n  return await axios\n    .get(`/3/movie/${movieId}?api_key=${API_KEY}`)\n    .then(r => r.data);\n};\n\nexport const fetchActors = async movieId => {\n  return await axios\n    .get(`/3/movie/${movieId}/credits?api_key=${API_KEY}`)\n    .then(r => r.data.cast);\n};\n\nexport const fetchReviews = async movieId => {\n  return await axios\n    .get(`/3/movie/${movieId}/reviews?api_key=${API_KEY}`)\n    .then(r => r.data.results);\n};\n\nexport const fetchMoviesByQuery = async query => {\n  return await axios\n    .get(`/3/search/movie?query=${query}&api_key=${API_KEY}`)\n    .then(r => r.data.results);\n};\n","import { useHomePageLogic } from 'components/HomePage/HomeLogic';\nimport { Link } from 'react-router-dom';\n\nexport default function HomePage() {\n  const { trendingMovies, isLoading, uniqueMovies } = useHomePageLogic();\n\n  return (\n    <div>\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : (\n        <ul>\n          {uniqueMovies.map((movieId, index) => {\n            const movie = trendingMovies.find(movie => movie.id === movieId);\n\n            return (\n              <li key={index}>\n                <Link to={`/movies/${movie.id}`} state={{ from: '/' }}>\n                  {movie.backdrop_path ? (\n                    <img\n                      src={`https://image.tmdb.org/t/p/original${movie.backdrop_path}`}\n                      alt={movie.title}\n                    />\n                  ) : (\n                    <span>No Image Available</span>\n                  )}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { fetchTrendingMovies } from '../Api/api';\n\nexport const useHomePageLogic = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [isLoading, setisLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setisLoading(true);\n\n        const fetchedHome = await fetchTrendingMovies();\n\n        setTrendingMovies(fetchedHome);\n      } catch (error) {\n        console.error('Error', error);\n      } finally {\n        setisLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const uniqueMovies = Array.from(\n    new Set(trendingMovies.map(movie => movie.id))\n  );\n\n  return { trendingMovies, isLoading, uniqueMovies };\n};\n"],"names":["API_KEY","axios","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","concat","then","response","data","results","catch","err","console","log","abrupt","sent","stop","apply","arguments","fetchMovieDetailsById","_ref2","_callee2","movieId","_context2","r","_x","fetchActors","_ref3","_callee3","_context3","cast","_x2","fetchReviews","_ref4","_callee4","_context4","_x3","fetchMoviesByQuery","_ref5","_callee5","query","_context5","_x4","HomePage","_useHomePageLogic","_useState","useState","_useState2","_slicedToArray","trendingMovies","setTrendingMovies","_useState3","_useState4","isLoading","setisLoading","useEffect","fetchData","fetchedHome","t0","error","finish","uniqueMovies","Array","from","Set","map","movie","id","useHomePageLogic","_jsx","children","index","find","Link","to","state","backdrop_path","src","alt","title"],"sourceRoot":""}